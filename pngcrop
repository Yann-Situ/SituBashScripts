#!/bin/bash
#pngtojpg
usage()
{
    echo 'Usage: pngcrop "argument(s)" [-o dir] [-rm]'
    echo ""
    echo "Crop multiple png files. The values are unfortunately in code (todo: make modular)."
    echo ""
    echo "-o dir : pour placer les nouveaux fichiers dans le r√©pertoire dir"
    echo "-rm : pour effacer les fichiers .png convertis"
    echo ""
    echo "-h or --help Print this message"
}

if [ $# = 0 ]
then
	usage
fi

let "a=0"
let "erase=0"
let "move=0"
declare -a newfiles
declare -a firstfiles


while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    case $PARAM in
        -h | --help)
            usage
            exit
            ;;
        -rm)
            let "erase=1"
	    ;;
        -o)
	    let "move=1"
	    shift
	    directory="$1"
	    if [ ! -e "$directory" ]
	    then
		mkdir $directory
	    fi
            ;;
	*)
	    IFS='.' read -ra split <<< "$1" #in order to split $1 in an array with delimiter '.'
		if [ -e "$1" ]
		then
		    #convert "$1" -crop wxh+x+y "${split[0]}_crop.${split[1]}"
            convert "$1" -crop 800x800+80+0 "${split[0]}_crop.${split[1]}"
		    echo -e "\e[92m$1 \e[39mcropped"
		    let "a=a+1"
		    firstfiles+=("$1")
		    newfiles+=("${split[0]}_crop.${split[1]}")
		else
		    echo -e "\e[31m--- $1 \e[39mdoesn't seems to exist..."
		fi
            ;;
    esac
    shift
done

if [ $a -lt 2 ]
then
   echo -e "\e[39m$a files created."
else
   echo -e "\e[39m$a file created."
fi

#erase step :
if [ $erase -eq 1 ]; then

    echo""
    # for file in ${firstfiles[*]}
    # do
    # 	rm "$file"
    # 	echo "$file erased"
    # done
    for ((i = 0; i < ${#firstfiles[@]}; i++))
    do
	rm "${firstfiles[$i]}"
	echo "${firstfiles[$i]} removed"
    done
fi

#move step :
if [ $move -eq 1 ]; then

    echo""
    #this doesn't work because of spaces in names
    # for file in ${newfiles[*]}
    # do
    # 	mv "$file" "$directory"
    # 	echo "$file moved"
    # done
    #instead use :
    for ((i = 0; i < ${#newfiles[@]}; i++))
    do
	mv "${newfiles[$i]}" "$directory"
	echo "${newfiles[$i]} moved"
    done
fi
IFS=' '
